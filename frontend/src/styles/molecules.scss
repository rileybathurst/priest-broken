/**
 * CONTENTS
 *
 * SUMMIT
 *
 * SERVICES
 *
 */

/*------------------------------------*\
  #SUMMIT
\*------------------------------------*/

.summit__backer {
    background: #EFEFEF;
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 32px), 0 100%);
    padding-bottom: 32px;
    margin-bottom: 2rem;

    display: grid; // this is needed for the image background
    @media (min-width: map-get($breakpoints, large)) {
        grid-template-columns: 1fr 1fr;
        clip-path: polygon(0 0, 100% 0, 100% calc(100% - 128px), 0 100%);
        padding-bottom: 128px;
    }
}

.summit__backer--image {
    // background: turquoise; // testing
    grid-row: 2;
    grid-column: 1;
    display: none; // before I sort it out
    clip-path: polygon(128px 0, 100% 0, 100% 100%, 0 100%);
    height: calc(100% + 128px);
    mix-blend-mode: luminosity;

    @media (min-width: map-get($breakpoints, large)) {
        grid-row: 1;
        grid-column: 2;

        display: block;
    }

    > .gatsby-image-wrapper {
        height: calc(100% + 128px);
    }
}

#summit {

/*     // test
    background: tomato !important;
        @media (min-width: map-get($breakpoints, medium)) {
            background: turquoise !important;
    } */



    background: #EFEFEF;
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 32px), 0 100%);
    margin-bottom: 2rem;

    grid-row: 1;
    grid-column: 1;

    display: grid;
    // max-width: $page-width; // I think these are all going to be nested
    // max-width pulled to the center
    // this doesnt quite work for the background behind the video
    // margin: 0 auto;

    grid-template-columns: 1fr 2rem 1fr;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-columns: 1fr 2rem 1fr 2rem 1fr;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-template-columns: 1fr 2rem 1fr 2rem 1fr 2em 1fr;
    }

    @media (min-width: map-get($breakpoints, large)) {
        // grid-template-columns: 1fr 2rem 1fr 2rem calc(2fr + 2rem);
        // the calc just keeps them the same

        grid-template-columns: 1fr 2rem 1fr 2rem 1fr 2rem 1fr 2rem 1fr 2rem 1fr;
        // this way is more cumbersome but less media queries further down
        
        padding-bottom: 128px;
        clip-path: polygon(0 0, 100% 0, 100% calc(100% - 128px), 0 100%);
    }
}

.summit__info {
    grid-row: 1;
    grid-column: 1/4;
    padding: $global-padding;
    max-width: 35em;
    justify-self: center;

    h1 {
        margin-top: 2.75rem; // back to type-scale
        font-size: 1.728em;
        line-height: 1.35em;

        @media (min-width: map-get($breakpoints, medium)) {
			font-size: 2.074em; // h2 halfway back up
		}

		@media (min-width: map-get($breakpoints, large)) {
			font-size: 2.448em; // return to normal

		}
    }
}

// this is messy it uses svg and clip-path at different sizes
.summit__about {
    grid-row: 3;
    grid-column: 1/4;
    margin-bottom: $global-margin;
    // max-width: 37em; // its allowed bigger for the padding
    justify-self: center;

    @media (min-width: map-get($breakpoints, medium)) {
        background: $medium-gray;
        grid-column: 2/6;
        grid-template-columns: 2em 1fr 2em;
        clip-path: polygon(2em 0, 100% 0, 100% 100%, 0 100%);
        margin-bottom: 0;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 4/8;
    }
    
    @media (min-width: map-get($breakpoints, large)) {
        grid-row: 2;
        grid-column: 4/6;
        width: calc(100% + 4rem); // This can flow off the screen
        margin-left: -2rem; // the info cant flow off the screen
    }

    h2 {
        background: $medium-gray;
        padding: $global-padding;
        grid-row: 2;
        grid-column: 2;
        margin: 0; // keep it close to the svg
        font-size: 1.728em;
        line-height: 1.33em; // guess and check select some text to check its right

        @media (min-width: map-get($breakpoints, medium)) {
            font-size: 2.074em;
            grid-row: 1;
            grid-column: 2;
        }
    }

    p {
        background: $medium-gray;
        padding: $global-padding;
        grid-row: 3;
        grid-column: 2;
        margin: 0; // keep it close to the svg

        @media (min-width: map-get($breakpoints, medium)) {
            grid-row: 2;
            grid-column: 2;
        }
    }

}

.summit__video {
    grid-row: 2;
    grid-column: 1/4;
    margin: 1rem;
    max-width: 60rem; // double the measure guess and check

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/6;
        width: calc(100% - 2rem);
        margin: 2rem auto;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 2/7;
        width: 100%;
        margin: 0;
    }

    @media (min-width: map-get($breakpoints, large)) {
        grid-row: 1/4;
        grid-column: 7/12;
    }

    iframe {
        clip-path: polygon(32px 0%, 100% 0%, calc(100% - 32px) 100%, 0% 100%);

        @media (min-width: map-get($breakpoints, large)) {
            clip-path: polygon(64px 0%, 100% 0%, calc(100% - 64px) 100%, 0% 100%);
        }
    }
}

.summit__videobacker {
    grid-row: 2;
    grid-column: 1/4;
    z-index: -1;
    clip-path: polygon(32px 0, 100% 0, 100% calc(100% - 32px), 0 100%);
    mix-blend-mode: luminosity;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 2/6;
        margin-bottom: 3rem;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 3/8;
    }

    @media (min-width: map-get($breakpoints, large)) {
        // display: none;
        grid-row: 1/4;
        grid-column: 7/12;
    }
}

.summit__videobacker--color {
    grid-row: 2;
    grid-column: 1/4;
    z-index: -1;
    clip-path: polygon(32px 0, 100% 0, 100% calc(100% - 32px), 0 100%);
    background: $secondary-color;
    mix-blend-mode: multiply;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 2/6;
        margin-bottom: 3rem;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 3/8;
    }

    @media (min-width: map-get($breakpoints, large)) {
        grid-row: 1/4;
        grid-column: 7/12;
    }
}

/* .summit__video--crop-left {
    grid-row: 1;
    grid-column: 1;
    z-index: 99; // above the video

} */

/* .summit__video--crop-right {
    grid-row: 1;
    grid-column: 3;
} */

.summit__team-photo_1 {
    grid-row: 4;
    grid-column: 1/3;
    clip-path: polygon(0 0, calc(100% - 1rem) 0, calc(100% - 3rem) 100%, 0 100%);
    margin-right: 0.5rem;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 3;
        grid-column: 1/3;
    }

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/5;
    }

    @media (min-width: map-get($breakpoints, large)) {
        grid-row: 2;
        grid-column: 1/4;
        max-width: $general-measure;
    }

    @media (min-width: map-get($breakpoints, xxlarge)) {
        grid-column: 3;
    }

    > .gatsby-image-wrapper {
        @media (min-width: map-get($breakpoints, medium)) {
            // height: calc(100% - 5.75rem);
            height: 100%; // match the box
        }
    }

    img {
        @media (min-width: map-get($breakpoints, medium)) {
            object-position: 20% center !important; // this image only guess and check
        }
    }
}

.summit__team-photo_2 {
    grid-row: 4;
    grid-column: 2/4;
    clip-path: polygon(32px 0, 100% 0, 100% 100%, 0 100%);
    margin-left: 0.5rem;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1;
        grid-column: 5;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-row: 1;
        grid-column: 4/8;
    }

    > .gatsby-image-wrapper {
        @media (min-width: map-get($breakpoints, medium)) {
            height: calc(100% - 5.75rem);
            margin-top: 3.75rem; // match the h1 tag then guess and check
        }
    }

    img {
        @media (min-width: map-get($breakpoints, medium)) {
            object-position: 20% center !important; // this image only guess and check
        }
    }
}



.summit__contact {
    grid-row: 5;
    grid-column: 1/4;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/6;
    }

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/8;
    }

    @media (min-width: map-get($breakpoints, large)) {
        grid-row: 3;
        max-width: 66rem; // guess and check
        justify-self: end;
    }

    display: flex;
    flex-direction: column;
    @media (min-width: map-get($breakpoints, medium)) {
        flex-direction: row;
        justify-content: space-around;
    }
}

.summit__contact--service {
    margin: 0 $global-margin $global-margin $global-margin;
    padding: $global-padding;
    display: grid;

    @media (min-width: map-get($breakpoints, medium)) {
        flex: 1; // these should be the same size
    }
}

.summit__contact--icon {
    grid-row: 1;
    grid-column: 1;
    padding: $global-padding;
    justify-self: end;
    z-index: 2; // above the border

    svg {
        fill: $white;
    }
}

.summit__contact--text {
    grid-row: 1;
    grid-column: 2;
    align-self: center;
    z-index: 2; // above the border
    padding: $global-padding;
    color: $white;
}

// I'm not 100% this is the best way to do it but it works
.summit-contact--skew {
    grid-row: 1;
    grid-column: 1/3;
    transform: skewX(-15deg); // guess and check
    background: $secondary-color;
    background: linear-gradient(180deg, rgba(30,141,183,1) 0%, rgba(0,96,135,1) 100%);
}
/* 
.summit-contact--skew__border {
    grid-row: 1;
    grid-column: 1/3;
    border: 2px solid $primary-color;
    transform: skewX(-15deg); // guess and check
} */

/* .summit__contact--email {
    .summit-contact--skew {
        @media (min-width: map-get($breakpoints, large)) {
            background: $light-gray;
            mix-blend-mode: screen;
        }
    }
} */

/*------------------------------------*\
  TASKS
\*------------------------------------*/

.tasks__wrapper {
    display: flex;
    flex-wrap: wrap;
}

.tasks {
    display: grid;
    // overlays so it has to be a grid
    // background: $medium-gray;
    margin-bottom: $global-margin*2;
    max-width: $page-width;
    margin: 0 auto;
    margin-bottom: 2rem;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-columns: 1fr 2em 1fr 2em 1fr;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-template-columns: 1fr 2em 1fr 2em 1fr 2em 1fr;
    }
}

.tasks__image {
    grid-row: 1;
    grid-column: 1;
    clip-path: polygon(0 0, 100% 0, calc(100% - 32px) calc(100% - 32px), 0 100%);
    z-index: 2;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1/3;
        grid-column: 1/3;
        clip-path: polygon(0 0, 100% 0, calc(100% - 64px) 100%, 0 100%);
        margin-bottom: 2rem;

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 1/5;
    }

        > .gatsby-image-wrapper {
            height: 100%;
        }
    }
}

.tasks__title {
    grid-row: 2;
    grid-column: 1;
    padding: $global-padding;
    z-index: 3;
    margin-top: $global-margin;
    
    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1;
        grid-column: 3/6;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 5/8;
    }

    a {
        color: $white;
    }

}

.tasks__info {
    grid-row: 3/5;
    grid-column: 1;
    padding: $global-padding;
    padding-bottom: 5rem; // build all this into the grids

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 2;
        grid-column: 3/6;
        clip-path: none;
        margin-bottom: 2rem;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 5/8;
    }

    h5 {
        margin-top: $global-margin;
    }

    a {
        display: block;
    }
}

.tasks__background--upper {
    background: $secondary-color;
    background: linear-gradient(0deg, rgba(30,141,183,1) 0%, rgba(0,96,135,1) 100%);
    grid-row: 1/3;
    grid-column: 1;
    z-index: 1;
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 32px), 0 100%);

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1;
        grid-column: 2/6;
        clip-path: none;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 3/8;
    }
}

.tasks__background--lower {
    grid-row: 2/5;
    grid-column: 1;
    z-index: -1;
    background: $medium-gray;
    background: linear-gradient(0deg, rgba(254,254,254,1) 0%, rgba(230,230,230,1) 100%);
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 32px), 0 100%);
    margin-bottom: 2rem;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/6;
        clip-path: none;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 3/8;
    }
}

.tasks__divider {
    border: none; // we overwrite this next
    border-bottom: 2px solid $secondary-color;
    width: calc(100% - 2rem);
    grid-row: 5;
    grid-column: 1/4;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/6;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 1/8;
    }
}

.tasks__divider--cross {
    border-left: 2px solid $secondary-color;
    border-right: 2px solid $secondary-color;
    width: 4px;
    background: $white;
    grid-row: 5;
    grid-column: 1/4;
    justify-self: center;
    transform: skewX(-15deg); // guess and check

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1/6;
    }

    @media (min-width: map-get($breakpoints, medium__half-step)) {
        grid-column: 1/8;
    }
}